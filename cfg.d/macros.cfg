[gcode_macro PRINT_START] 
gcode:
    M400
    {% set NOZZLE_DIAMETER = params.NOZZLE_DIAMETER %}
    {% set CHAMBER = params.CHAMBER|int %}
    {% set BED     = params.BED|default(60)|int %}
    {% set HOTEND  = params.EXTRUDER|default(220)|int %}
    {% set HEPH    = (0.8 * HOTEND)|round(0)|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% set filament_sensor_enable = printer['filament_motion_sensor SFS_T0'].enabled %}
    {% set MODE = params.MODE|default("NORMAL") %}

    CLEAR_PAUSE                                           ; reset pause state
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}  # Restore velocity to default
    M220 S100                                   ; Reset speed factor 
    M221 S100                                    ; Reset extrude factor

    {% if NOZZLE_DIAMETER is defined %}
      CHECK_NOZZLE_DIAMETER NOZZLE_DIAMETER={NOZZLE_DIAMETER}
    {% else %}
      RESPOND MSG="Nozzle Diameter not specified"
    {% endif %}

    # sensor should not trigger if we want to load filament now.
    {% if filament_sensor_enable %}
        SFS_DISABLE
    {% endif %}

    RESPOND MSG="Preheating"
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}   ; start bed heater
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={150}    ; start hotend heater for probing
    CANOPY_LED_PRINT                ; set canopy light to print brightness

    # Need to be done before homing to avoid altering position
    {% if MODE == "PERFORMANCE" %}
        RESPOND MSG="Performance mode"
        POWER_PROFILE_PERFORMANCE
        Qmode_exit
    {% elif MODE == "QUIET" %}
        RESPOND MSG="Quiet mode"
        POWER_PROFILE_NORMAL
        QMODE
    {% else %}
        RESPOND MSG="Normal mode"
        POWER_PROFILE_NORMAL
        Qmode_exit
    {% endif %}

    STATUS_HOMING
    _CG28                            ; warm home all
    #  {% if "xyz" not in printer.toolhead.homed_axes %}
    #     G28 X Y
    # {% endif %}
    # TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={150 - 5} MAXIMUM={150}
    # G28 Z

    # More heating
    # DOCK_PROBE_UNLOCK           ; if already homed, in a case of print restart for exemple
    STATUS_HEATING
    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET={HEPH}    ; start hotend heater

    G90                             ; absolute positioning
    G1 X{x_wait} Y{y_wait} Z2 F15000                    # Goes to center of the bed

    # Heatsoak
    {% if CHAMBER is defined and CHAMBER > 20 %} 
      SET_DISPLAY_TEXT MSG="Heatsoaking chamber: {CHAMBER}c"           # Displays info
      M106 S255                     ; 75% print fan for extra warming
      # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={CHAMBER}
      HEATSOAK_CHAMBER TEMP={CHAMBER}
    {% endif %}

    # Clean nozzle
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={150 - 5} MAXIMUM={150 + 5}

    SET_DISPLAY_TEXT MSG="Cleaning nozzle"
    STATUS_CLEANING
    CLEAN_NOZZLE_SIMPLE                    ; warm nozzle scrub for cleaner z home - no purge
    M109 S150

    G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
    
    # M106 S255                               ; speed cooldown extruder
    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET={150}    ; start hotend heater for probing
    # M106 S0
    
    # Second nozzle clean just before probing
    # SET_DISPLAY_TEXT MSG="Cleaning nozzle"
    # STATUS_CLEANING
    # CLEAN_NOZZLE_SIMPLE

    TEMPERATURE_WAIT SENSOR="heater_bed" MINIMUM={BED} MAXIMUM={BED + 1}     ; bed full temp

    # ATTACH_PROBE_LOCK               ; keep klicky connected during next macros

    # gantry leveling
    SET_DISPLAY_TEXT MSG="Leveling gantry"
    STATUS_LEVELING

    {% if not printer.quad_gantry_level.applied %}
    #   FQGL                            ; double qgl = true level
      QUAD_GANTRY_LEVEL
    {% endif %}
    
    SET_DISPLAY_TEXT MSG="Cleaning nozzle"
    STATUS_CLEANING
    CLEAN_NOZZLE_SIMPLE                    ; warm nozzle scrub for cleaner z home - no purge

    SET_DISPLAY_TEXT MSG="Auto-Z calibration"          # Displays info
    STATUS_CALIBRATING_Z
    
    G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only after tilt/mesh
    # CALIBRATE_Z                     ; klicky auto-z magic
    # SET_FRAME_COMP ENABLE=1         ; enable frame expansion compensation
    # SET_Z_THERMAL_ADJUST ENABLE=1  ; (new) frame expansion compensation

    SET_DISPLAY_TEXT MSG="Bed mesh"          # Displays info
    STATUS_MESHING
    BED_MESH_CALIBRATE ADAPTIVE=1             ; generate bed level mesh

    # DOCK_PROBE_UNLOCK               ; klicky *must* be docked before nozzle scrub

    # M106 S0                     ; speedup warming
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={HOTEND}  ; set hotend full temp

    ; enable filament sensor to trigger pause if no filament during purge
    {% if filament_sensor_enable %}
        SFS_ENABLE
    {% endif %}

    # GUARD_FILAMENT_SENSOR ON_FAIL="PAUSE X205 Y0.2 Z135"    ; Pause print if no filament detected
    # TODO Block rst 

    STATUS_HEATING
    G0 X290 Y290 Z15 F15000          ; quickly move over purge bucket
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={HOTEND - 1} MAXIMUM={HOTEND + 2}    ; hotend at full temp

    SET_GCODE_OFFSET Z=0.09     ; add a little offset for hotend thermal expansion
    # SET_GCODE_OFFSET Z_ADJUST={OFFSET}  ; apply optional material squish via slicer

    STATUS_CLEANING
    CLEAN_NOZZLE                    ; hot purge into bucket and final nozzle scrub
    G0 X25 Y275 Z10 F15000          ; quickly move away from purge bucket

    STATUS_PRINTING                 ; stealthburner led control
    SET_DISPLAY_TEXT MSG="Printing"          # Displays info

    M106 S0                           ; reset fan speed

[gcode_macro PRINT_END] 
gcode:
    M400
    {% set filament_sensor_enable = printer['filament_motion_sensor SFS_T0'].enabled %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    {% if filament_sensor_enable %}
        SFS_DISABLE
    {% endif %}

    _TOOLHEAD_PARK_PAUSE_CANCEL
    # _TIP_SHAPING PURGE=0

    POWER_PROFILE_NORMAL
    QMODE_EXIT

    G92 E0
    # G1 E-20 F2100

    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0 

    {% if filament_sensor_enable %}
        SFS_ENABLE
    {% endif %}

    {% if printer.heater_bed.temperature > 95 %} 
        SET_FAN_SPEED FAN=nevermore SPEED=0.70      ; turn on nevermore (if it isn't already)
    {% endif %}

    TURN_OFF_HEATERS
    CANOPY_LED_FLASH
    STATUS_READY

    M107
    M400

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value

## easy button for pressure advance
[gcode_macro PRESSURE_ADVANCE]
gcode:
    {% set advance=params.ADVANCE|default(0.03) %}
    SET_PRESSURE_ADVANCE ADVANCE={advance}
 
## translate Marlin Linear Advance to Klipper PA value
[gcode_macro M900]
gcode:
    {% set advance=params.K|default(0.03) %}
    SET_PRESSURE_ADVANCE ADVANCE={advance}


##  i'm just here so i don't get typed
[gcode_macro FWRESTART] 
gcode:
    FIRMWARE_RESTART


[gcode_macro SHUTDOWN]
gcode:
    {action_call_remote_method("shutdown_machine")}


[gcode_macro REBOOT]
gcode:
    {action_call_remote_method("reboot_machine")}

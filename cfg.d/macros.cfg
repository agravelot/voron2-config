[gcode_macro PRINT_START] 
gcode:
    # configure_extruder

    # slicer variables
    {% set NOZZLE_DIAMETER = params.NOZZLE_DIAMETER %}
    {% set CHAMBER = params.CHAMBER|default(10)|int %}
    {% set BED     = params.BED|default(60)|int    %}
    {% set HOTEND  = params.EXTRUDER|default(220)|int %}
    {% set HEPH    = (0.8 * HOTEND)|round(0)|int   %}      ; 80% hotend preheat
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% set filament_sensor_enable = printer["gcode_macro _User_Variables"].filament_sensor_enable %}


   {% if NOZZLE_DIAMETER is defined %}
     CHECK_NOZZLE_DIAMETER NOZZLE_DIAMETER={NOZZLE_DIAMETER}   
   {% else %}
     RESPOND MSG="Nozzle Diameter Ignored"
   {% endif %}
  

    M220 S100 ; Reset speed factor 
    M221 S100 ; Reset extrude factor

    {% if HEPH <= 190 %}
      {% set HEPH = 191 %}
    {% endif %}

    {% if filament_sensor_enable %}
        SFS_DISABLE
    {% endif %}

    # preheat all the things
    M117 Preheating
    STATUS_HEATING                  ; stealthburner led control
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}   ; start bed heater
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={HEPH}    ; start hotend heater
    # NEVERMORE_START                 ; now with 2x the cleaning and warming action
    PRINT_FAN_START                 ; run print fan to help prevent air duct warping
    CANOPY_LED_PRINT                ; set canopy light to print brightness

    STATUS_HOMING
    _CG28                            ; warm home all
   
    G90                             ; absolute positioning

    STATUS_HEATING                  ; stealthburner led control
    {% if params.BED|int > 90 %} 
      SET_DISPLAY_TEXT MSG="Heatsoaking chamber: {CHAMBER}c"           # Displays info
      # CHAMBER_FAN_STOP              ; stop chamber exhaust fan
      M106 S255                     ; 75% print fan for extra warming
      G1 X{x_wait} Y{y_wait} Z50 F15000       ; move sb to center chamber warming position
      # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={CHAMBER}
      HEATSOAK_CHAMBER TEMP={CHAMBER}
    # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
      SET_DISPLAY_TEXT MSG="Bed: {BED}"           # Displays info
      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
      M190 S{BED}                                  # Sets the target temp for the bed
      # SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
      # G4 P300000 
    {% endif %}

    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={HEPH}       ; nozzle full preheat
    TEMPERATURE_WAIT SENSOR="heater_bed" MINIMUM={BED}      ; bed full temp

    ATTACH_PROBE_LOCK               ; keep klicky connected during next macros

    # gantry leveling
    SET_DISPLAY_TEXT MSG="Leveling gantry"          # Displays info
    STATUS_LEVELING
    BED_MESH_CLEAR

    {% if printer.quad_gantry_level.applied == False %}
      QGTL                            ; double qgl = true level
    {% endif %}

    # auto-z and z-drift compensation
    # G0 X245 Y275 Z15 F15000         ; quickly move clear of klicky dock
    SET_DISPLAY_TEXT MSG="Cleaning nozzle"          # Displays info
    STATUS_CLEANING
    # DOCK_PROBE_UNLOCK                ; REMOVE ME when klicky touch 
    # G0 X290 Y295 Z15 F15000          ; quickly move over purge bucket
    CLEAN_NOZZLE_SIMPLE                    ; warm nozzle scrub for cleaner z home - no purge

    SET_DISPLAY_TEXT MSG="Auto-Z calibration"          # Displays info
    STATUS_CALIBRATING_Z
    G28 Z
    CALIBRATE_Z                     ; klicky auto-z magic
    # SET_FRAME_COMP ENABLE=1         ; enable frame expansion compensation
    #SET_Z_THERMAL_ADJUST ENABLE=1  ; (new) frame expansion compensation

    SET_DISPLAY_TEXT MSG="Bed mesh"          # Displays info
    STATUS_MESHING
    BED_MESH_CALIBRATE              ; generate bed level mesh
      
  
    DOCK_PROBE_UNLOCK               ; klicky *must* be docked before nozzle scrub

    # final nozzle prep
    SET_DISPLAY_TEXT MSG="Nozzle purge"          # Displays info
    M106 S0                     ; speedup warming
    
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={HOTEND}  ; set hotend full temp
    STATUS_HEATING                  ; stealthburner led control
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={HOTEND}     ; hotend at full temp
    # G0 X290 Y290 Z15 F15000          ; quickly move over purge bucket

    STATUS_CLEANING
    CLEAN_NOZZLE                    ; hot purge into bucket and final nozzle scrub
    # G0 X25 Y275 Z10 F15000          ; quickly move away from purge bucket

    # start print
    # CHAMBER_FAN_START               ; (re)start chamber exhaust fan
    STATUS_PRINTING                 ; stealthburner led control
    SET_DISPLAY_TEXT MSG="Printing"          # Displays info

    {% if filament_sensor_enable %}
        SFS_ENABLE
    {% endif %}
 


##  slicer end
[gcode_macro PRINT_END] 
gcode:
    PARK

    _TIP_SHAPING
    G92 E0
    G1 E-20 F2100

    M106 S0                        ; print fan to 0%
    # M106 S64                        ; print fan to 25%
    # UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=900    ; circulation fans off after 15m
    TURN_OFF_HEATERS
    CANOPY_LED_FLASH                ; flasher
    STATUS_READY                    ; stealthburner led control
    SET_DISPLAY_TEXT MSG="Print finished"          # Displays info

    M107
    M400

    M84 E

    {% if filament_sensor_enable %}
        SFS_DISABLE
    {% endif %}

    # BED_MESH_CLEAR



[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:
    # {% set light_enabled = printer["gcode_macro _USER_VARIABLES"].light_enabled %}
    # {% set light_intensity_start_print = printer["gcode_macro _USER_VARIABLES"].light_intensity_start_print %}

    {% if printer.pause_resume.is_paused %}
        RESPOND MSG="Print is already paused"
    {% else %}
        # SAVE_GCODE_STATE NAME=PAUSE_state
        # {% if light_enabled %}
        #     LIGHT_ON S={light_intensity_start_print}
        # {% endif %}
        BASE_PAUSE
        # PARK
    {% endif %}
    SET_IDLE_TIMEOUT TIMEOUT=43200 ; set timeout to 12 hours
  

# [gcode_macro PAUSE]
# description: Pause the actual running print
# rename_existing: PAUSE_BASE
# variable_extrude: 1.0       ; change this for more or less extrusion
# gcode:
#     # {% if filament_sensor_enable %}
#     #     SFS_DISABLE
#     # {% endif %}

#     ##### read E from pause macro #####
#     {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#     ##### set park positon for x and y #####
#     # default is your max posion from your printer.cfg
#     {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#     {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#     ##### calculate save lift position #####
#     {% set max_z = printer.toolhead.axis_maximum.z|float %}
#     {% set act_z = printer.toolhead.position.z|float %}
#     {% if act_z < (max_z - 2.0) %}
#         {% set z_safe = 2.0 %}
#     {% else %}
#         {% set z_safe = max_z - act_z %}
#     {% endif %}
#     ##### end of definitions #####
#     PAUSE_BASE
#     G91
#     {% if printer.extruder.can_extrude|lower == 'true' %}
#         G1 E-{E} F2100
#     {% else %}
#         {action_respond_info("Extruder not hot enough")}
#     {% endif %}

#     {% if "xyz" in printer.toolhead.homed_axes %}
#         G1 Z{z_safe} F900
#         G90
#         G1 X{x_park} Y{y_park} F6000
#     {% else %}
#         {action_respond_info("Printer not homed")}
#     {% endif %} 
#     M104 S0                        ; turn off hotend
#     SET_IDLE_TIMEOUT TIMEOUT=43200 ; set timeout to 12 hours


# [gcode_macro RESUME]
# description: Resume the actual running print
# rename_existing: RESUME_BASE
# gcode:
#     SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value

#     # {% if filament_sensor_enable %}
#     #     SFS_ENABLE
#     # {% endif %}

#     ##### read E from pause macro #####
#     {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#     #### get VELOCITY parameter if specified ####
#     {% if 'VELOCITY' in params|upper %}
#         {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#     {%else %}
#         {% set get_params = "VELOCITY=15000" %}
#     {% endif %}
#     ##### end of definitions #####
#     {% if printer.extruder.can_extrude|lower == 'true' %}
#         G91
#         G1 E{E} F2100
#     {% else %}
#         {action_respond_info("Extruder not hot enough")}
#     {% endif %}  
#     STATUS_PRINTING             ; stealthburner led control
#     RESUME_BASE {get_params}


# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
#     SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
#     CLEAR_PAUSE
#     SDCARD_RESET_FILE
#     PRINT_END
#     BASE_CANCEL_PRINT

##  basic abs/asa preheat parameters
[gcode_macro PREHEAT_ABS] 
gcode:
    STATUS_HEATING                  ; stealthburner led control
    # NEVERMORE_START                 ; nevermore cleans and speeds up warming
    M106 S128                       ; print fan for chamber warming
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=175
    M117 Preheating


[gcode_macro COOLDOWN]
gcode:
    TURN_OFF_HEATERS                ; turn off all heaters
    UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=20     ; fans off after 20s
    M84                             ; turn off steppers
    CANOPY_LED_OFF                  ; turn off canopy lights
    STATUS_OFF                      ; stealthburner led control


##  delayed gcode to stop the various CNC fans after a print ends
##  gets called by PRINT_END and COOLDOWN
[delayed_gcode POST_PRINT_FANS]
gcode:
    # NEVERMORE_STOP                  ; turn off nevermore fans
    # CHAMBER_FAN_STOP                ; turn off chamber fan
    PRINT_FAN_STOP                  ; turn off print fan


##  park over bed center
[gcode_macro PARK] 
gcode:
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X150 Y150 Z45 F15000         ; move to position


##  park in front for maintenance / cleaning
[gcode_macro PARKFRONT] 
gcode:
    CANOPY_LED_FULL                 ; set canopy light to full brightness
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X150 Y10 Z100 F15000         ; move to position


##  park in rear for maintenance / cleaning
[gcode_macro PARKREAR] 
gcode:
    CANOPY_LED_FULL                 ; set canopy light to full brightness
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X150 Y300 Z100 F15000        ; move to position

[gcode_macro PARK_PRE_HOME] 
gcode:
    G90                             ; absolute positioning
    G0 X290 Y290 F15000             ; move to position

##  park over top of the purge bucket
[gcode_macro PARKBUCKET] 
gcode:
    CG28                            ; home if not already homed
    G90                             ; absolute positioning
    G0 X299 Y300 Z15 F15000          ; move to position


##  activate heaters/fans/leds, runs a fast qgl, then parks over bed center
[gcode_macro PARKPREHEAT] 
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
        CANOPY_LED_PRINT            ; set canopy light to print brightness
        PREHEAT_ABS                 ; preheat profile
        QGL                         ; basic quad gantry level
        G90                         ; absolute positioning
        G0 X150 Y150 Z50 F15000     ; move ab to center chamber warming position
        STATUS_HEATING              ; stealthburner led control
    {% else %}
        { action_respond_info("PARK disabled while printing!") }
    {% endif %}


##  activate heaters/fans then double-pass qgl
[gcode_macro QGLPREHEAT] 
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
        CANOPY_LED_PRINT            ; set canopy light to print brightness
        PREHEAT_ABS                 ; preheat profile
        QGL                         ; basic quad gantry level
        G90                         ; absolute positioning
        G0 X140 Y305 Z25 F15000     ; move ab to rear chamber warming position
        STATUS_HEATING              ; stealthburner led control
    {% else %}
        { action_respond_info("PARK disabled while printing!") }
    {% endif %}


##  activate heaters/fans then double-pass qgl
[gcode_macro QGTLPREHEAT] 
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
        CANOPY_LED_PRINT            ; set canopy light to print brightness
        PREHEAT_ABS                 ; preheat profile
        QGTL_LOCK                   ; quad gantry true level
        G90                         ; absolute positioning
        G0 X140 Y305 Z25 F15000     ; move ab to rear chamber warming position
        STATUS_HEATING              ; stealthburner led control
    {% else %}
        { action_respond_info("PARK disabled while printing!") }
    {% endif %}


##  enable chamber exhaust fan
# [gcode_macro CHAMBER_FAN_START] 
# gcode:
#     UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=0  ; cancel delayed fan shut off
#     SET_FAN_SPEED FAN=CHAMBER_FAN SPEED=0.15

##  turn off chamber exhaust fans
# [gcode_macro CHAMBER_FAN_STOP] 
# gcode:
#     SET_FAN_SPEED FAN=CHAMBER_FAN SPEED=0


##  enable nevermore fans
# [gcode_macro NEVERMORE_START] 
# gcode:
#     UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=0  ; cancel delayed fan shut off
#     SET_FAN_SPEED FAN=NEVERMORE SPEED=0.9

##  turn off nevermore fans
# [gcode_macro NEVERMORE_STOP] 
# gcode:
#     SET_FAN_SPEED FAN=NEVERMORE SPEED=0


##  enable part cooling fan
[gcode_macro PRINT_FAN_START] 
gcode:
    UPDATE_DELAYED_GCODE ID=POST_PRINT_FANS DURATION=0  ; cancel delayed fan shut off
    M106 S90  ; parts fan 35%

##  turn off part cooling fan
[gcode_macro PRINT_FAN_STOP] 
gcode:
    M107  ; turn off parts fan


## easy button for pressure advance
[gcode_macro PRESSURE_ADVANCE]
gcode:
    {% set advance=params.ADVANCE|default(0.03) %}
    SET_PRESSURE_ADVANCE ADVANCE={advance}
 
## translate Marlin Linear Advance to Klipper PA value
[gcode_macro M900]
gcode:
    {% set advance=params.K|default(0.03) %}
    SET_PRESSURE_ADVANCE ADVANCE={advance}


##  i'm just here so i don't get typed
[gcode_macro FWRESTART] 
gcode:
    FIRMWARE_RESTART


[gcode_macro SHUTDOWN]
gcode:
    {action_call_remote_method("shutdown_machine")}


[gcode_macro REBOOT]
gcode:
    {action_call_remote_method("reboot_machine")}


# [gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
# rename_existing: CANCEL_PRINT_BASE
# gcode:
#     TURN_OFF_HEATERS
#     CANCEL_PRINT_BASE



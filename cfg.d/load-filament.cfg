# inspiration : https://github.com/Frix-x/klippain/blob/main/macros/helpers/filament_swap.cfg


[gcode_macro INTERACTIVE_LOAD_FILAMENT]
description: Interactive load filament with prompt
gcode: 
    RESPOND TYPE=command MSG="action:prompt_begin Filament insert"
    RESPOND TYPE=command MSG="action:prompt_text Pleade select your filament type:"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button PLA|LOAD_FILAMENT TEMP=220"
    RESPOND TYPE=command MSG="action:prompt_button PETG|LOAD_FILAMENT TEMP=230"
    RESPOND TYPE=command MSG="action:prompt_button ABS/ASA|LOAD_FILAMENT TEMP=250"
    RESPOND TYPE=command MSG="action:prompt_button PC|LOAD_FILAMENT TEMP=270"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Close|RESPOND TYPE=command MSG="action:prompt_end""
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro AUTO_LOAD_FILAMENT]
gcode:
    {% if printer.pause_resume.is_paused or printer.idle_timeout.state|lower != "printing" %}
        {% set last_extruder_temp = printer["gcode_macro RESUME"].last_extruder_temp|default(0) %}

        {% if last_extruder_temp.restore and last_extruder_temp.temp >= 190 %}
            M117 LOAD_FILAMENT TEMP={last_extruder_temp}
            LOAD_FILAMENT TEMP={last_extruder_temp}
        {% elif printer[printer.toolhead.extruder].can_extrude and printer.extruder.target >= 190 %}
            M117 LOAD_FILAMENT
            LOAD_FILAMENT
        {% else %}
            M117 INTERACTIVE_LOAD_FILAMENT
            INTERACTIVE_LOAD_FILAMENT
        {% endif %}
    {% else %}
        M117 NOP
    {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"        ; close INTERACTIVE_PREHEAT_EXTRUDER prompt
    {% set can_extrude = printer[printer.toolhead.extruder].can_extrude %} # status of active extruder

    # TODO If paused idle state, resune temp else interative
    {% set TEMP = params.TEMP|default(printer["gcode_macro _User_Variables"].print_default_extruder_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(101)|float %}
    {% set speed = params.SPEED|default(300) %}
    # {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {% set filament_sensor_enable = printer["gcode_macro _User_Variables"].filament_sensor_enable|default(false) %}
    {% set verbose = printer["gcode_macro _User_Variables"].verbose %}

    SAVE_GCODE_STATE NAME=load_state
    _LOW_TEMP_CHECK T={TEMP}

    M83
    G92 E0
    G1 E{DISTANCE|float} F200
    G1 E50 F150
    G1 E-1 F150

    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro M600]
description: M600 to change filament
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE ooze_prevention=0 X=150 Y=0
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _User_Variables"].print_default_extruder_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(101)|float %}
    {% set speed = params.SPEED|default(300) %}
    # {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {% set filament_sensor_enable = printer["gcode_macro _User_Variables"].filament_sensor_enable|default(false) %}
    {% set verbose = printer["gcode_macro _User_Variables"].verbose %}

    SAVE_GCODE_STATE NAME=unload_state
    _LOW_TEMP_CHECK T={TEMP}

    _TIP_SHAPING
    M83
    G1 E-20 F3600
    G4 P3000
    G1 E{DISTANCE|float * -1} F3000

    RESTORE_GCODE_STATE NAME=unload_state


[gcode_macro _TIP_SHAPING]
description: Filament tip shaping sequence
gcode:
    {% set TEMP = params.TEMP|default(230)|float %}
    {% set PURGE = params.PURGE|default(1)|int %}
    {% set verbose = printer["gcode_macro _User_Variables"].verbose %}
    {% set filament_sensor_enable = printer["gcode_macro _User_Variables"].filament_sensor_enable %}

    SAVE_GCODE_STATE NAME=TIP_SHAPING_state
	_LOW_TEMP_CHECK T={TEMP}

    {% set old_pressure_advance = printer.extruder.pressure_advance|default(0) %} # old pressure advance
    # we suppress pressure advance
    SET_PRESSURE_ADVANCE ADVANCE=0

    M82
    G92 E0
    # # Prusa implementation
    {% if PURGE == 1 %}
        G1 E2 F3000
        G1 E2 F3500
        G1 E2 F4000
    {% endif %}

    G1 E-15 F4800
    G1 E-20 F4500
    G1 E10 F2000
    G1 E-10 F2100
    G1 E10 F2150
    G1 E-10 F2250
    G1 E10 F2300

    # set last pressure advance
    SET_PRESSURE_ADVANCE ADVANCE={old_pressure_advance}
	RESTORE_GCODE_STATE NAME=TIP_SHAPING_state
